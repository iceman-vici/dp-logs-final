version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dialpad-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dialpad_calls_db
      POSTGRES_USER: dp_calls
      POSTGRES_PASSWORD: dp_logs
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database:/docker-entrypoint-initdb.d
    networks:
      - dialpad-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dp_calls"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dialpad-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: dp_calls
      DB_PASSWORD: dp_logs
      DB_NAME: dialpad_calls_db
      DIALPAD_TOKEN: ${DIALPAD_TOKEN}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET:-dp_call_logs}
      CORS_ORIGINS: http://localhost:3000,http://frontend:3000
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - dialpad-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dialpad-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      WDS_SOCKET_PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - dialpad-network
    command: npm start
    stdin_open: true
    tty: true

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dialpad-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dialpad.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - dialpad-network
    depends_on:
      - postgres

networks:
  dialpad-network:
    driver: bridge

volumes:
  postgres_data:
    name: dialpad_postgres_data
  pgadmin_data:
    name: dialpad_pgadmin_data
